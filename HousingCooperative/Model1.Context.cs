//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан по шаблону.
//
//     Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//     Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HousingCooperative
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class HousingCooperativeEntities : DbContext
    {
        public HousingCooperativeEntities()
            : base("name=HousingCooperativeEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Counters> Counters { get; set; }
        public virtual DbSet<Houses> Houses { get; set; }
        public virtual DbSet<Owners> Owners { get; set; }
        public virtual DbSet<OwnersOfHouses> OwnersOfHouses { get; set; }
        public virtual DbSet<Rates> Rates { get; set; }
        public virtual DbSet<Receipts> Receipts { get; set; }
        public virtual DbSet<Statuses> Statuses { get; set; }
        public virtual DbSet<StatusesOfRates> StatusesOfRates { get; set; }
        public virtual DbSet<sysdiagrams> sysdiagrams { get; set; }
        public virtual DbSet<TypesOfCounters> TypesOfCounters { get; set; }
        public virtual DbSet<TypesOfPayment> TypesOfPayment { get; set; }
        public virtual DbSet<Users> Users { get; set; }
    
        public virtual ObjectResult<SelectCounters_Result> SelectCounters()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectCounters_Result>("SelectCounters");
        }
    
        public virtual ObjectResult<SelectHouses_Result> SelectHouses()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectHouses_Result>("SelectHouses");
        }
    
        public virtual ObjectResult<SelectOwners_Result> SelectOwners()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectOwners_Result>("SelectOwners");
        }
    
        public virtual ObjectResult<SelectOwnersOfHouses_Result> SelectOwnersOfHouses()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectOwnersOfHouses_Result>("SelectOwnersOfHouses");
        }
    
        public virtual ObjectResult<SelectRates_Result> SelectRates(Nullable<int> statusRate)
        {
            var statusRateParameter = statusRate.HasValue ?
                new ObjectParameter("statusRate", statusRate) :
                new ObjectParameter("statusRate", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectRates_Result>("SelectRates", statusRateParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual ObjectResult<SearchOwners_Result> SearchOwners(string name)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SearchOwners_Result>("SearchOwners", nameParameter);
        }
    
        public virtual ObjectResult<OrderByDescriptionOwnersOfHouses_Result> OrderByDescriptionOwnersOfHouses()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OrderByDescriptionOwnersOfHouses_Result>("OrderByDescriptionOwnersOfHouses");
        }
    
        public virtual ObjectResult<OrderByNumberHouseOwnersOfHouses_Result> OrderByNumberHouseOwnersOfHouses()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OrderByNumberHouseOwnersOfHouses_Result>("OrderByNumberHouseOwnersOfHouses");
        }
    
        public virtual ObjectResult<SearchOwnersOfHouses_Result> SearchOwnersOfHouses(string name)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SearchOwnersOfHouses_Result>("SearchOwnersOfHouses", nameParameter);
        }
    }
}
